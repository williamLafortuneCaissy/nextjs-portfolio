.container {
    margin-top: 10rem;
    padding-inline: var(--container-padding);

    display: flex;
    flex-direction: column;
    gap: 5rem;
}

.content {
    text-align: center;
} 

.title {
    font-size: clamp(1.5rem, 7vw, 3rem);
    font-weight: 600;
    line-height: 1.2;
    margin-bottom: 1.2rem;
}

.text {
    color: var(--text-light);
    line-height: 1.75;
    margin-bottom: 1.5rem;
}

.ctas {
    display: inline-grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 1rem;
}

/* wheel */
.wheel {
    --rotation-duration: 60s;
    --logo-size: 3rem;

    --wheel-padding: 1rem;
    --wheel-thickness: calc(var(--logo-size) + var(--wheel-padding) * 2);
    --wheel-border-color: var(--primary-border-color);
    --wheel-border-width: 1px;
    --wheel-background-color: hsl(var(--primary-hue), 40%, 5%);


    display: grid;
    place-items: center;
    margin-inline: auto;
    
    aspect-ratio: 1;
    width: 100%;
    border-radius: 50%;
    padding: var(--wheel-padding);

    /* vars for simplification only */
    --box-shadow-prefix: inset 0 0 0;
    --wheel-outer-border: var(--wheel-border-width);
    --wheel-background: calc(var(--wheel-thickness) + var(--wheel-border-width));
    --wheel-inner-border: calc(var(--wheel-thickness) + var(--wheel-border-width) * 2);

    box-shadow: 
        var(--box-shadow-prefix) var(--wheel-outer-border) var(--wheel-border-color),
        var(--box-shadow-prefix) var(--wheel-background) var(--wheel-background-color),
        var(--box-shadow-prefix) var(--wheel-inner-border) var(--wheel-border-color);
}

.wheel > * {
    grid-column: -1 / 1;
    grid-row: -1 / 1;
    width: 100%;
}

.rotator {
    /* --rotation-offset should be set inline */
    rotate: var(--rotation-offset, 0deg);
    animation: rotate var(--rotation-duration) linear infinite;
}

@keyframes rotate {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}

.logo {
    width: var(--logo-size);
    height: var(--logo-size);
    margin-left: auto;
    rotate: calc(-1* var(--rotation-offset));
    animation: rotate var(--rotation-duration) linear infinite reverse;
}


@media screen and (min-width: 768px) {
    .container {
        display: grid;
        align-items: center;
        grid-template-columns: repeat(2, minmax(0, 1fr));
        max-width: var(--container-width);
        margin-inline: auto;
        gap: 10rem;
        margin-top: 20rem;
    }
    .content {
        text-align: left;
    }
    .wheel {
        --logo-size: 4rem;
    }
}